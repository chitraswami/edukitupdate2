{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nexport class EditAddressComponent {\n  constructor(fb, auth, router, http) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.http = http;\n    this.EditAddressForm = this.fb.group({\n      addressLine1: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      postalCode: ['', Validators.required]\n    });\n    // if (this.EditAddressForm) {\n    //   this.EditAddressForm.patchValue(this.address);\n    // }\n    this.auth.getAddress().subscribe(res => {\n      console.log(res);\n      this.userId = res.data._id;\n      this.address = res.data;\n      let updatedAddress = {\n        addressLine1: res.data.addressLine1,\n        city: res.data.city,\n        state: res.data.state,\n        postalCode: res.data.postalCode\n      };\n      this.EditAddressForm.patchValue(updatedAddress);\n    }, err => {\n      console.log(err);\n    });\n    this.EditAddressForm?.get('postalCode')?.valueChanges.subscribe(postalCode => {\n      if (postalCode.length === 6) {\n        this.http.get(`https://api.postalpincode.in/pincode/${postalCode}`).subscribe(res => {\n          if (res[0].Status === \"Success\") {\n            const postOffice = res[0].PostOffice[0];\n            this.address = {\n              addressLine1: postOffice.Name,\n              city: postOffice.District,\n              state: postOffice.State\n              // postalCode: postalCode\n            };\n\n            this.pinCode = postalCode;\n            this.EditAddressForm.patchValue(this.address);\n          }\n        });\n      }\n    });\n  }\n  ngOnInit() {\n    this.EditAddressForm.patchValue(this.address);\n  }\n  onSubmit() {\n    console.log(this.userId);\n    const updatedAddress = {\n      ...this.address,\n      addressLine1: this.address.addressLine1,\n      city: this.address.city,\n      state: this.address.state,\n      postalCode: this.pinCode,\n      userid: this.userId\n    };\n    // if (this.EditAddressForm.valid) {\n    // const updatedAddress = {\n    // ...this.address,\n    // ...this.EditAddressForm.value\n    // };\n    this.auth.updateAddress(updatedAddress).subscribe(res => {\n      console.log(res);\n      this.router.navigate(['/profile']);\n    }, err => {\n      console.log(err);\n    });\n  }\n}\nEditAddressComponent.ɵfac = function EditAddressComponent_Factory(t) {\n  return new (t || EditAddressComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nEditAddressComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditAddressComponent,\n  selectors: [[\"app-edit-address\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-2\"], [1, \"row-justify-content-center\"], [1, \"col-md-8\"], [1, \"card\", \"shadow-lg\", \"p-4\", \"mt-5\", \"mb-6\"], [1, \"text-left\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Address line 1\", \"formControlName\", \"addressLine1\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"City\", \"formControlName\", \"city\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"State\", \"formControlName\", \"state\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Postal pincode\", \"formControlName\", \"postalCode\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EditAddressComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function EditAddressComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\");\n      i0.ɵɵtext(7, \" Address line 1 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementStart(9, \"label\");\n      i0.ɵɵtext(10, \" City \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementStart(12, \"label\");\n      i0.ɵɵtext(13, \" State \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementStart(15, \"label\");\n      i0.ɵɵtext(16, \" Postal pincode \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function EditAddressComponent_Template_button_click_19_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(20, \"Save\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.EditAddressForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","EditAddressComponent","constructor","fb","auth","router","http","EditAddressForm","group","addressLine1","required","city","state","postalCode","getAddress","subscribe","res","console","log","userId","data","_id","address","updatedAddress","patchValue","err","get","valueChanges","length","Status","postOffice","PostOffice","Name","District","State","pinCode","ngOnInit","onSubmit","userid","updateAddress","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\CHROME DOWNLOADS\\edukit-main\\edukit-main\\login-page\\src\\app\\pages\\edit-address\\edit-address.component.ts","D:\\CHROME DOWNLOADS\\edukit-main\\edukit-main\\login-page\\src\\app\\pages\\edit-address\\edit-address.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-edit-address',\n  templateUrl: './edit-address.component.html',\n  styleUrls: ['./edit-address.component.css']\n})\nexport class EditAddressComponent implements OnInit {\n  EditAddressForm: FormGroup;\n  address: any;\n  pinCode:any;\n  userId: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private http: HttpClient\n  ) {\n    this.EditAddressForm = this.fb.group({\n      addressLine1: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      postalCode: ['', Validators.required],\n    });\n\n    // if (this.EditAddressForm) {\n    //   this.EditAddressForm.patchValue(this.address);\n    // }\n this.auth.getAddress().subscribe(\n\n      (res) => {\n        console.log(res)\n        this.userId = res.data._id\n        this.address = res.data;\n        let  updatedAddress = {\n\n          addressLine1: res.data.addressLine1,\n          city:  res.data.city,\n          state: res.data.state,\n          postalCode:res.data.postalCode,\n        }\n        this.EditAddressForm.patchValue(updatedAddress);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n\n    this.EditAddressForm?.get('postalCode')?.valueChanges.subscribe((postalCode: string) => {\n      if (postalCode.length === 6) {\n        this.http.get<any>(`https://api.postalpincode.in/pincode/${postalCode}`).subscribe(res => {\n          if (res[0].Status === \"Success\") {\n            const postOffice = res[0].PostOffice[0];\n\n            this.address = {\n              addressLine1: postOffice.Name,\n              city: postOffice.District,\n              state: postOffice.State,\n              // postalCode: postalCode\n            };\n\n              this.pinCode = postalCode\n\n            this.EditAddressForm.patchValue(this.address);\n          }\n        });\n      }\n    });\n  }\n\n  ngOnInit(): void {\n\n    this.EditAddressForm.patchValue(this.address);\n  }\n\n\nonSubmit() {\n  console.log(this.userId);\n  const updatedAddress = {\n    ...this.address,\n    addressLine1: this.address.addressLine1,\n    city: this.address.city,\n    state: this.address.state,\n    postalCode:this.pinCode,\n    userid:this.userId\n  };\n  // if (this.EditAddressForm.valid) {\n  // const updatedAddress = {\n  // ...this.address,\n  // ...this.EditAddressForm.value\n  // };\n  this.auth.updateAddress(updatedAddress).subscribe(\n  (res) => {\n  console.log(res);\n  this.router.navigate(['/profile']);\n  },\n  (err) => {\n  console.log(err);\n  }\n  );\n  }\n  }\n\n\n\n\n\n\n\n\n","\n<div class=\"container mt-2\">\n  <div class=\"row-justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card shadow-lg p-4 mt-5 mb-6\">\n\n        <form [formGroup] =\"EditAddressForm\" (ngSubmit)=\"onSubmit()\" class=\"text-left\">\n        <div class=\"form-group\">\n\n          <label>\n            Address line 1\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Address line 1\" formControlName=\"addressLine1\">\n\n          <label>\n            City\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"City\" formControlName=\"city\">\n\n          <label>\n            State\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"State\" formControlName=\"state\">\n\n          <label>\n            Postal pincode\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Postal pincode\" formControlName=\"postalCode\">\n\n        </div><br>\n        <!-- <button class=\"btn btn-primary\">Submit</button> -->\n        <button class=\"btn btn-primary \" type=\"submit\" (click)=\"onSubmit()\">Save</button>\n\n      </form>\n    </div>\n  </div>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}