{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nexport class EditAddressComponent {\n  constructor(fb, auth, router, http) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.http = http;\n    this.EditAddressForm = this.fb.group({\n      addressLine1: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      postalCode: ['', Validators.required]\n    });\n    // if (this.EditAddressForm) {\n    //   this.EditAddressForm.patchValue(this.address);\n    // }\n    this.auth.getAddress().subscribe(res => {\n      this.address = res.data;\n      this.EditAddressForm.patchValue(this.address);\n    }, err => {\n      console.log(err);\n    });\n    this.EditAddressForm?.get('postalCode')?.valueChanges.subscribe(postalCode => {\n      if (postalCode.length === 6) {\n        this.http.get(`https://api.postalpincode.in/pincode/${postalCode}`).subscribe(res => {\n          if (res[0].Status === \"Success\") {\n            const postOffice = res[0].PostOffice[0];\n            this.address = {\n              addressLine1: postOffice.Name,\n              city: postOffice.District,\n              state: postOffice.State,\n              postalCode: postalCode\n            };\n            this.EditAddressForm.patchValue(this.address);\n          }\n        });\n      }\n    });\n  }\n  ngOnInit() {\n    // this.EditAddressForm.patchValue(this.address);\n  }\n  onSubmit() {\n    // this.address = this.EditAddressForm.value;\n    this.auth.updateAddress(this.address);\n    this.router.navigate(['/edit-address']);\n  }\n}\nEditAddressComponent.ɵfac = function EditAddressComponent_Factory(t) {\n  return new (t || EditAddressComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nEditAddressComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditAddressComponent,\n  selectors: [[\"app-edit-address\"]],\n  decls: 9,\n  vars: 4,\n  template: function EditAddressComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0);\n      i0.ɵɵelementStart(1, \"p\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Address: \", ctx.data.addressLine1, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"City: \", ctx.data.city, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"State: \", ctx.data.state, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"PostalCode: \", ctx.data.postalCode, \"\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AAWnE,OAAM,MAAOC,oBAAoB;EAI/BC,YACUC,EAAe,EACfC,IAAiB,EACjBC,MAAc,EACdC,IAAgB;IAHhB,OAAE,GAAFH,EAAE;IACF,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IAEZ,IAAI,CAACC,eAAe,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACnCC,YAAY,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACvCC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MAC/BE,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MAChCG,UAAU,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACU,QAAQ;KACrC,CAAC;IAEF;IACA;IACA;IACA,IAAI,CAACN,IAAI,CAACU,UAAU,EAAE,CAACC,SAAS,CAC7BC,GAAG,IAAI;MACN,IAAI,CAACC,OAAO,GAAGD,GAAG,CAACE,IAAI;MACvB,IAAI,CAACX,eAAe,CAACY,UAAU,CAAC,IAAI,CAACF,OAAO,CAAC;IAC/C,CAAC,EACAG,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CACF;IAED,IAAI,CAACb,eAAe,EAAEgB,GAAG,CAAC,YAAY,CAAC,EAAEC,YAAY,CAACT,SAAS,CAAEF,UAAkB,IAAI;MACrF,IAAIA,UAAU,CAACY,MAAM,KAAK,CAAC,EAAE;QAC3B,IAAI,CAACnB,IAAI,CAACiB,GAAG,CAAM,wCAAwCV,UAAU,EAAE,CAAC,CAACE,SAAS,CAACC,GAAG,IAAG;UACvF,IAAIA,GAAG,CAAC,CAAC,CAAC,CAACU,MAAM,KAAK,SAAS,EAAE;YAC/B,MAAMC,UAAU,GAAGX,GAAG,CAAC,CAAC,CAAC,CAACY,UAAU,CAAC,CAAC,CAAC;YAEvC,IAAI,CAACX,OAAO,GAAG;cACbR,YAAY,EAAEkB,UAAU,CAACE,IAAI;cAC7BlB,IAAI,EAAEgB,UAAU,CAACG,QAAQ;cACzBlB,KAAK,EAAEe,UAAU,CAACI,KAAK;cACvBlB,UAAU,EAAEA;aACb;YACD,IAAI,CAACN,eAAe,CAACY,UAAU,CAAC,IAAI,CAACF,OAAO,CAAC;;QAEjD,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;EAEAe,QAAQ;IAEN;EAAA;EAGJC,QAAQ;IACN;IACA,IAAI,CAAC7B,IAAI,CAAC8B,aAAa,CAAC,IAAI,CAACjB,OAAO,CAAC;IACrC,IAAI,CAACZ,MAAM,CAAC8B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzC;;AA1DalC,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAmC;EAAAC;EAAAC;EAAAC;IAAA;MCyBjCC,6BAAc;MACZA,yBAAG;MAAAA,YAAgC;MAAAA,iBAAI;MACvCA,yBAAG;MAAAA,YAAqB;MAAAA,iBAAI;MAC5BA,yBAAG;MAAAA,YAAuB;MAAAA,iBAAI;MAC9BA,yBAAG;MAAAA,YAAiC;MAAAA,iBAAI;MAC1CA,0BAAe;;;MAJVA,eAAgC;MAAhCA,6DAAgC;MAChCA,eAAqB;MAArBA,kDAAqB;MACrBA,eAAuB;MAAvBA,oDAAuB;MACvBA,eAAiC;MAAjCA,8DAAiC","names":["Validators","EditAddressComponent","constructor","fb","auth","router","http","EditAddressForm","group","addressLine1","required","city","state","postalCode","getAddress","subscribe","res","address","data","patchValue","err","console","log","get","valueChanges","length","Status","postOffice","PostOffice","Name","District","State","ngOnInit","onSubmit","updateAddress","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\CHROME DOWNLOADS\\edukit-main\\edukit-main\\login-page\\src\\app\\pages\\edit-address\\edit-address.component.ts","D:\\CHROME DOWNLOADS\\edukit-main\\edukit-main\\login-page\\src\\app\\pages\\edit-address\\edit-address.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-edit-address',\n  templateUrl: './edit-address.component.html',\n  styleUrls: ['./edit-address.component.css']\n})\nexport class EditAddressComponent implements OnInit {\n  EditAddressForm: FormGroup;\n  address: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private http: HttpClient\n  ) {\n    this.EditAddressForm = this.fb.group({\n      addressLine1: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      postalCode: ['', Validators.required],\n    });\n\n    // if (this.EditAddressForm) {\n    //   this.EditAddressForm.patchValue(this.address);\n    // }\n    this.auth.getAddress().subscribe(\n      (res) => {\n        this.address = res.data;\n        this.EditAddressForm.patchValue(this.address);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n\n    this.EditAddressForm?.get('postalCode')?.valueChanges.subscribe((postalCode: string) => {\n      if (postalCode.length === 6) {\n        this.http.get<any>(`https://api.postalpincode.in/pincode/${postalCode}`).subscribe(res => {\n          if (res[0].Status === \"Success\") {\n            const postOffice = res[0].PostOffice[0];\n\n            this.address = {\n              addressLine1: postOffice.Name,\n              city: postOffice.District,\n              state: postOffice.State,\n              postalCode: postalCode\n            };\n            this.EditAddressForm.patchValue(this.address);\n          }\n        });\n      }\n    });\n  }\n\n  ngOnInit(): void {\n\n    // this.EditAddressForm.patchValue(this.address);\n  }\n\nonSubmit() {\n  // this.address = this.EditAddressForm.value;\n  this.auth.updateAddress(this.address);\n  this.router.navigate(['/edit-address']);\n}\n\n\n}\n\n\n\n\n\n\n\n","<!--\n<div class=\"container mt-2\">\n  <div class=\"row-justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card shadow-lg p-4 mt-5 mb-6\">\n\n        <form [formGroup] =\"EditAddressForm\" (ngSubmit)=\"onSubmit()\" class=\"text-left\">\n        <div class=\"form-group\">\n\n          <label>\n            Address line 1\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Address line 1\" formControlName=\"addressLine1\">\n\n          <label>\n            City\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"City\" formControlName=\"city\">\n\n          <label>\n            State\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"State\" formControlName=\"state\">\n\n          <label>\n            Postal pincode\n          </label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Postal pincode\" formControlName=\"postalCode\">\n\n        </div><br>\n        <button class=\"btn btn-primary\">Submit</button>\n\n      </form>\n    </div>\n  </div>\n\n</div> -->\n<ng-container>\n  <p>Address: {{ data.addressLine1 }}</p>\n  <p>City: {{ data.city }}</p>\n  <p>State: {{ data.state }}</p>\n  <p>PostalCode: {{ data.postalCode }}</p>\n</ng-container>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}