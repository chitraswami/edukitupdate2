{"ast":null,"code":"import { environment } from '../../environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(data) {\n    return this.http.post(`${environment.URL}/auth/register`, data);\n  }\n  signin(data) {\n    return this.http.post(`${environment.URL}/auth/login`, data);\n  }\n  getProfile() {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    };\n    return this.http.get(`${environment.URL}/auth/profile`, {\n      headers: headers\n    });\n  }\n  // updateAddress(address: any) {\n  //   this.address = address;\n  // }\n  updateAddress(address) {\n    this.address = address;\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    };\n    return this.http.put(`${environment.URL}/auth/address`, {\n      headers: headers\n    });\n  }\n  getAddress() {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    };\n    return this.http.get(`${environment.URL}/auth/address`, {\n      headers: headers\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,+BAA+B;;;AAK3D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAGN,WAAW,CAACO,GAAG,gBAAgB,EAAEF,IAAI,CAAC;EACjE;EAEAG,MAAM,CAACH,IAAS;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAGN,WAAW,CAACO,GAAG,aAAa,EAAEF,IAAI,CAAC;EAC9D;EAEAI,UAAU;IACR,MAAMC,OAAO,GAAG;MACdC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;KACxD;IACD,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,GAAGd,WAAW,CAACO,GAAG,eAAe,EAAE;MACtDG,OAAO,EAAEA;KACV,CAAC;EACJ;EAIA;EACA;EACA;EACAK,aAAa,CAACC,OAAY;IACxB,IAAI,CAACA,OAAO,GAAGA,OAAO;IAEtB,MAAMN,OAAO,GAAG;MACdC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;KACxD;IACD,OAAO,IAAI,CAACV,IAAI,CAACc,GAAG,CAAC,GAAGjB,WAAW,CAACO,GAAG,eAAe,EAAE;MACtDG,OAAO,EAAEA;KAEV,CAAC;EAEJ;EAEAQ,UAAU;IACR,MAAMR,OAAO,GAAG;MACdC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;KACxD;IACD,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,GAAGd,WAAW,CAACO,GAAG,eAAe,EAAE;MACtDG,OAAO,EAAEA;KACV,CAAC;EACJ;;AA/CWT,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["environment","AuthService","constructor","http","signup","data","post","URL","signin","getProfile","headers","Authorization","localStorage","getItem","get","updateAddress","address","put","getAddress","factory","providedIn"],"sourceRoot":"","sources":["D:\\CHROME DOWNLOADS\\edukit-main\\edukit-main\\login-page\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  address: any;\n  constructor(private http: HttpClient) {}\n\n  signup(data: any): Observable<any> {\n    return this.http.post(`${environment.URL}/auth/register`, data);\n  }\n\n  signin(data: any): Observable<any> {\n    return this.http.post(`${environment.URL}/auth/login`, data);\n  }\n\n  getProfile(): Observable<any> {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    };\n    return this.http.get(`${environment.URL}/auth/profile`, {\n      headers: headers,\n    });\n  }\n\n\n\n  // updateAddress(address: any) {\n  //   this.address = address;\n  // }\n  updateAddress(address: any) {\n    this.address = address;\n\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    };\n    return this.http.put(`${environment.URL}/auth/address`, {\n      headers: headers,\n\n    });\n\n  }\n\n  getAddress(): Observable<any> {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    };\n    return this.http.get(`${environment.URL}/auth/address`, {\n      headers: headers,\n    });\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}