{"ast":null,"code":"import { environment } from '../../environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(data) {\n    return this.http.post(`${environment.URL}/auth/register`, data);\n  }\n  signin(data) {\n    return this.http.post(`${environment.URL}/auth/login`, data);\n  }\n  getProfile() {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    };\n    return this.http.get(`${environment.URL}/auth/profile`, {\n      headers: headers\n    });\n  }\n  addAddress(data) {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    };\n    const newAddress = {\n      address: this.newAddress\n    };\n    return this.http.post(`${environment.URL}/auth/profile/add-Address`, {\n      ...data,\n      ...newAddress\n    }, {\n      headers: headers\n    });\n  }\n  editAddress(data) {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    };\n    return this.http.put(`${environment.URL}/auth/profile/edit-Address`, data, {\n      headers: headers\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,+BAA+B;;;AAK3D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAGN,WAAW,CAACO,GAAG,gBAAgB,EAAEF,IAAI,CAAC;EACjE;EAEAG,MAAM,CAACH,IAAS;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAGN,WAAW,CAACO,GAAG,aAAa,EAAEF,IAAI,CAAC;EAC9D;EAEAI,UAAU;IACR,MAAMC,OAAO,GAAG;MACdC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;KACxD;IACD,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,GAAGd,WAAW,CAACO,GAAG,eAAe,EAAE;MACtDG,OAAO,EAAEA;KACV,CAAC;EACJ;EAEAK,UAAU,CAACV,IAAS;IAClB,MAAMK,OAAO,GAAG;MACdC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;KACxD;IACD,MAAMG,UAAU,GAAG;MAAEC,OAAO,EAAE,IAAI,CAACD;IAAU,CAAE;IAE/C,OAAO,IAAI,CAACb,IAAI,CAACG,IAAI,CACnB,GAAGN,WAAW,CAACO,GAAG,2BAA2B,EAC7C;MAAE,GAAGF,IAAI;MAAE,GAAGW;IAAU,CAAE,EAC1B;MACEN,OAAO,EAAEA;KACV,CACF;EACH;EAEAQ,WAAW,CAACb,IAAS;IACnB,MAAMK,OAAO,GAAG;MACdC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;KACxD;IACD,OAAO,IAAI,CAACV,IAAI,CAACgB,GAAG,CAAC,GAAGnB,WAAW,CAACO,GAAG,4BAA4B,EAAEF,IAAI,EAAE;MACzEK,OAAO,EAAEA;KACV,CAAC;EACJ;;AA3CWT,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["environment","AuthService","constructor","http","signup","data","post","URL","signin","getProfile","headers","Authorization","localStorage","getItem","get","addAddress","newAddress","address","editAddress","put","factory","providedIn"],"sourceRoot":"","sources":["D:\\CHROME DOWNLOADS\\edukit-main\\edukit-main\\login-page\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  newAddress: any;\n  constructor(private http: HttpClient) {}\n\n  signup(data: any): Observable<any> {\n    return this.http.post(`${environment.URL}/auth/register`, data);\n  }\n\n  signin(data: any): Observable<any> {\n    return this.http.post(`${environment.URL}/auth/login`, data);\n  }\n\n  getProfile(): Observable<any> {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    };\n    return this.http.get(`${environment.URL}/auth/profile`, {\n      headers: headers,\n    });\n  }\n\n  addAddress(data: any): Observable<any> {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    };\n    const newAddress = { address: this.newAddress };\n\n    return this.http.post(\n      `${environment.URL}/auth/profile/add-Address`,\n      { ...data, ...newAddress },\n      {\n        headers: headers,\n      }\n    );\n  }\n\n  editAddress(data: any): Observable<any> {\n    const headers = {\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\n    };\n    return this.http.put(`${environment.URL}/auth/profile/edit-Address`, data, {\n      headers: headers,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}